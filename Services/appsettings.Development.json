{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "Authentication": {
    "Local": {
      // In our case, we'll make this the same value as the 
      // Issuer used in the JwtIssuer (below).
      "Authority": "biz/v1.0",
      // ClientId
      "Audience": "BizApp"      
    },
    "Google": {
      "Authority": "https://accounts.google.com",
      // ClientId
      "Audience": "YOUR_GOOGLE_CLIENT_ID"
    },
    "Microsoft": {
      //"Authority": "https://login.microsoftonline.com/common/v2.0",
      // Using a custom authority set on our Azure app registration 
      // so that Microsoft will use a standard JWT instead of 
      // its proprietary one.
      "Authority": "https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0",
      // ClientId
      "Audience": "e872b112-dec9-4763-be06-a99ec0144724"
    },
    "Facebook": {
      "Authority": "https://www.facebook.com",
      // ClientId
      "Audience": "YOUR_FACEBOOK_APP_ID"
    },
    "Apple": {
      "Authority": "https://appleid.apple.com",
      // ClientId
      "Audience": "YOUR_APPLE_CLIENT_ID"
    }
  },
  "Database": {
    "Backend": "PostgreSQL",
    "MSSQL": "Server=localhost;Database=Biz;Integrated Security=True;TrustServerCertificate=True;",
    "PostgreSql": "Host=localhost;Database=Biz;Username=postgres;Password=1"
  },
  "JwtIssuer": {
    // Used to securely sign tokens.
    "SecurityKey": "a7613(C0<146*536!x257f0Y$A22d7120738l2dD649a67330133@!!!8=6345j631#250#&8aL2",
    
    // The auth service issuing the token.  
    //   Check the iss claim when validating.
    "Issuer": "biz/v1.0",
    
    // The API expecting the token and which is allowed to decode
    // the tokens.  Our authentication needs to verify this value 
    // in tokens we receive.
    // Check the aud claim when validating.
    "Audience": "biz.api",
    
    "AccessTokenExpirationMinutes": 5,
    
    "RefreshTokenExpirationDays": 14
  }
} 