<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shadui="clr-namespace:ShadUI">
    <Design.PreviewWith>
        <Border Padding="12">
            <StackPanel Spacing="8">
                <Button
                    Height="36"
                    Padding="16,8"
                    shadui:ButtonAssist.ShowProgress="True"
                    Content="Default" />
                <Button
                    shadui:ButtonAssist.ShowProgress="True"
                    Classes="Primary"
                    Content="Primary" />
                <Button
                    shadui:ButtonAssist.ShowProgress="True"
                    Classes="Secondary"
                    Content="Secondary" />
                <Button
                    shadui:ButtonAssist.ShowProgress="True"
                    Classes="Destructive"
                    Content="Destructive" />
                <Button
                    shadui:ButtonAssist.ShowProgress="True"
                    Classes="Outline"
                    Content="Outline" />
                <Button
                    shadui:ButtonAssist.ShowProgress="True"
                    Classes="Ghost"
                    Content="Ghost">
                    <shadui:ButtonAssist.Icon>
                        <PathIcon Height="32" Data="{x:Static shadui:Icons.Cross}" />
                    </shadui:ButtonAssist.Icon>
                </Button>
                <Button BorderBrush="{DynamicResource BorderColor}" Classes="Icon">
                    <shadui:ButtonAssist.Icon>
                        <PathIcon Height="32" Data="{x:Static shadui:Icons.Cross}" />
                    </shadui:ButtonAssist.Icon>
                </Button>
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    <ControlTheme x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Medium" />
        <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="shadui:ButtonAssist.Icon" Value="{x:Null}" />
        <Setter Property="shadui:ButtonAssist.ShowProgress" Value="False" />
        <Setter Property="shadui:ButtonAssist.HoverBackground" Value="{DynamicResource GhostColor}" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="RootPanel">
                    <Panel.Transitions>
                        <Transitions>
                            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.10" />
                        </Transitions>
                    </Panel.Transitions>
                    <Border
                        Name="BaseBackground"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Opacity="1">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity" Duration="0:0:0.20" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <Border
                        Name="HoverBackground"
                        Background="{TemplateBinding shadui:ButtonAssist.HoverBackground}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Opacity="0">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity" Duration="0:0:0.20" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <Border
                        Name="BorderContainer"
                        Padding="{TemplateBinding Padding}"
                        Background="Transparent"
                        ClipToBounds="True"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        TextElement.Foreground="{TemplateBinding Foreground}">
                        <StackPanel HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Orientation="Horizontal">
                            <Viewbox Width="{TemplateBinding shadui:ButtonAssist.ShowProgress, Converter={x:Static shadui:BooleanConverters.ToZeroOrDouble}, ConverterParameter='24'}" Height="16">
                                <Viewbox.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Width" Duration="0:0:0.10" />
                                    </Transitions>
                                </Viewbox.Transitions>
                                <ContentPresenter Content="{TemplateBinding shadui:ButtonAssist.ShowProgress, Converter={x:Static shadui:BooleanConverters.ToLoading}}" />
                            </Viewbox>
                            <Viewbox
                                Width="{TemplateBinding shadui:ButtonAssist.ShowProgress,
                                                        Converter={x:Static shadui:BooleanConverters.ToDoubleOrZero},
                                                        ConverterParameter='24'}"
                                IsVisible="{TemplateBinding shadui:ButtonAssist.Icon,
                                                            Converter={x:Static ObjectConverters.IsNotNull}}"
                                Opacity="{TemplateBinding shadui:ButtonAssist.ShowProgress,
                                                          Converter={x:Static shadui:BooleanConverters.ToInverseOpacity}}">
                                <Viewbox.Transitions>
                                    <Transitions>
                                        <DoubleTransition Property="Opacity" Duration="0:0:0.15" />
                                        <DoubleTransition Property="Width" Duration="0:0:0.10" />
                                    </Transitions>
                                </Viewbox.Transitions>
                                <ContentPresenter x:Name="Icon" Content="{TemplateBinding shadui:ButtonAssist.Icon}" />
                            </Viewbox>
                            <ContentPresenter
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                FontSize="{TemplateBinding FontSize}"
                                FontWeight="SemiBold"
                                RecognizesAccessKey="True" />
                        </StackPanel>
                    </Border>
                </Panel>
            </ControlTemplate>
        </Setter>

        <!--  Nested Selectors For Default Button  -->
        <Style Selector="^ /template/ TextBlock">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontWeight" Value="Medium" />
        </Style>
        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="0.5" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#HoverBackground">
            <Setter Property="Opacity" Value="1" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#BaseBackground">
            <Setter Property="Opacity" Value="0" />
        </Style>
        <Style Selector="^:pressed /template/ Panel#RootPanel">
            <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
        </Style>
        <Style Selector="^ /template/ Border#BorderContainer:pointerover">
            <Setter Property="Cursor" Value="Hand" />
        </Style>

        <!--  NoPressedAnimation  -->
        <Style Selector="^.NoPressedAnimation">
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(1, 1)" />
            </Style>
        </Style>

        <!--  Primary  -->
        <Style Selector="^.Primary">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource PrimaryColor50}" />
            </Style>
        </Style>

        <!--  Secondary  -->
        <Style Selector="^.Secondary">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource SecondaryColor50}" />
            </Style>
        </Style>

        <!--  Destructive  -->
        <Style Selector="^.Destructive">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{DynamicResource DestructiveColor}" />
            <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource DestructiveColor50}" />
            </Style>
        </Style>

        <!--  Outline  -->
        <Style Selector="^.Outline">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{DynamicResource SelectionColor}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource GhostColor}" />
            </Style>
        </Style>

        <!--  Ghost  -->
        <Style Selector="^.Ghost">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource GhostColor}" />
            </Style>
        </Style>

        <!--  Icon  -->
        <Style Selector="^.Icon">
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Background" Value="{DynamicResource GhostHoverColor50}" />
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource GhostColor}" />
            </Style>
        </Style>

        <!--  DestructiveIcon  -->
        <Style Selector="^.DestructiveIcon">
            <Setter Property="Width" Value="36" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Background" Value="{DynamicResource DestructiveColor}" />
            <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundColor}" />
            <Style Selector="^ /template/ ContentPresenter">
                <Setter Property="Foreground" Value="{DynamicResource DestructiveForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource DestructiveColor50}" />
            </Style>
        </Style>
    </ControlTheme>
    <ControlTheme
        x:Key="{x:Type Button}"
        BasedOn="{StaticResource ButtonStyle}"
        TargetType="Button" />
</ResourceDictionary>