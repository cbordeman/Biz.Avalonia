<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shadui="clr-namespace:ShadUI"
    xmlns:system="clr-namespace:System;assembly=netstandard">
    <ControlTheme x:Key="TopLevelMenuItem" TargetType="MenuItem">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="CornerRadius" Value="{DynamicResource MdCornerRadius}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Padding" Value="12 4" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="shadui:MenuItemAssist.PopupVerticalOffset" Value="8" />
        <Setter Property="shadui:MenuItemAssist.PopupPlacement" Value="BottomEdgeAlignedLeft" />
        <Setter Property="Template">
            <ControlTemplate>
                <Panel Name="RootPanel">
                    <Panel.Transitions>
                        <Transitions>
                            <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.10" />
                        </Transitions>
                    </Panel.Transitions>
                    <Border
                        Name="BaseBackground"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Opacity="1">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity" Duration="0:0:0.20" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <Border
                        Name="HoverBackground"
                        Background="{DynamicResource GhostColor}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Opacity="0">
                        <Border.Transitions>
                            <Transitions>
                                <DoubleTransition Property="Opacity" Duration="0:0:0.20" />
                            </Transitions>
                        </Border.Transitions>
                    </Border>
                    <Panel>
                        <Border
                            Name="BorderContainer"
                            Background="Transparent"
                            ClipToBounds="True"
                            CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter
                                Name="HeaderPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                Content="{TemplateBinding Header}"
                                FontFamily="{TemplateBinding FontFamily}">
                                <ContentPresenter.DataTemplates>
                                    <DataTemplate DataType="system:String">
                                        <TextBlock
                                            Name="HeaderText"
                                            FontSize="14"
                                            FontWeight="Medium"
                                            Text="{CompiledBinding}" />
                                    </DataTemplate>
                                </ContentPresenter.DataTemplates>
                            </ContentPresenter>
                        </Border>
                        <Popup
                            Name="PART_Popup"
                            HorizontalOffset="{TemplateBinding shadui:MenuItemAssist.PopupHorizontalOffset}"
                            IsLightDismissEnabled="True"
                            IsOpen="{TemplateBinding IsSubMenuOpen,
                                                     Mode=TwoWay}"
                            Opacity="0"
                            OverlayInputPassThroughElement="{CompiledBinding $parent[Menu]}"
                            Placement="{TemplateBinding shadui:MenuItemAssist.PopupPlacement}"
                            VerticalOffset="{TemplateBinding shadui:MenuItemAssist.PopupVerticalOffset}">
                            <LayoutTransformControl
                                Name="LayoutTransform"
                                Margin="-1,0,0,0"
                                RenderTransformOrigin="50%, 0%">
                                <Border
                                    Margin="2,0,2,4"
                                    shadui:ScrollEventAssist.PreventScrollPropagation="True"
                                    Background="{DynamicResource CardBackgroundColor}"
                                    BorderBrush="{DynamicResource BorderColor}"
                                    BorderThickness="1"
                                    BoxShadow="{DynamicResource Shadow}"
                                    CornerRadius="{DynamicResource LgCornerRadius}">
                                    <StackPanel Margin="0,2">
                                        <Border Padding="16,8" IsVisible="{TemplateBinding shadui:MenuItemAssist.Label, Converter={x:Static ObjectConverters.IsNotNull}}">
                                            <ContentPresenter Content="{TemplateBinding shadui:MenuItemAssist.Label}" FontFamily="{TemplateBinding FontFamily}" />
                                        </Border>
                                        <ScrollViewer>
                                            <ItemsPresenter
                                                Name="ItemsPresenter"
                                                Grid.IsSharedSizeScope="True"
                                                ItemsPanel="{TemplateBinding ItemsPanel}" />
                                        </ScrollViewer>
                                    </StackPanel>
                                </Border>
                            </LayoutTransformControl>
                        </Popup>
                    </Panel>
                </Panel>
            </ControlTemplate>
        </Setter>
        <Style Selector="^:disabled">
            <Setter Property="Opacity" Value="0.5" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#HoverBackground">
            <Setter Property="Opacity" Value="1" />
        </Style>
        <Style Selector="^:pointerover /template/ Border#BaseBackground">
            <Setter Property="Opacity" Value="0" />
        </Style>
        <Style Selector="^:open /template/ Border#HoverBackground">
            <Setter Property="Opacity" Value="1" />
        </Style>
        <Style Selector="^:open /template/ Border#BaseBackground">
            <Setter Property="Opacity" Value="0" />
        </Style>
        <Style Selector="^:open /template/ LayoutTransformControl#LayoutTransform">
            <Style.Animations>
                <Animation
                    Easing="SineEaseInOut"
                    FillMode="Forward"
                    Duration="0:0:0.10">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleY" Value="0.90" />
                        <Setter Property="ScaleTransform.ScaleX" Value="0.90" />
                        <Setter Property="Opacity" Value="0" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        <Setter Property="ScaleTransform.ScaleX" Value="1" />
                        <Setter Property="Opacity" Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>

        <!--  Primary  -->
        <Style Selector="^.Primary">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
            <Setter Property="Background" Value="{DynamicResource PrimaryColor}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#BorderContainer:pointerover">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource PrimaryColor50}" />
            </Style>
            <Style Selector="^.NoPressedAnimation">
                <Style Selector="^:pressed /template/ Panel#RootPanel">
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
            </Style>
        </Style>

        <!--  Secondary  -->
        <Style Selector="^.Secondary">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
            <Setter Property="Background" Value="{DynamicResource SecondaryColor}" />
            <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#BorderContainer:pointerover">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource SecondaryColor50}" />
            </Style>
            <Style Selector="^.NoPressedAnimation">
                <Style Selector="^:pressed /template/ Panel#RootPanel">
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
            </Style>
        </Style>

        <!--  Outline  -->
        <Style Selector="^.Outline">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
            <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
            <Setter Property="Background" Value="{DynamicResource SelectionColor}" />
            <Style Selector="^ /template/ TextBlock">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#HeaderPresenter">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}" />
            </Style>
            <Style Selector="^ /template/ Border#BorderContainer:pointerover">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource OutlineColor}" />
            </Style>
            <Style Selector="^.NoPressedAnimation">
                <Style Selector="^:pressed /template/ Panel#RootPanel">
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
            </Style>
        </Style>

        <!--  Ghost  -->
        <Style Selector="^.Ghost">
            <Setter Property="Height" Value="36" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="16,8" />
            <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource GhostHoverColor}" />
            </Style>
            <Style Selector="^ /template/ Border#BorderContainer:pointerover">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^.NoPressedAnimation">
                <Style Selector="^:pressed /template/ Panel#RootPanel">
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
            </Style>
        </Style>

        <!--  Icon  -->
        <Style Selector="^.Icon">
            <Setter Property="Height" Value="36" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Background" Value="{DynamicResource GhostHoverColor50}" />
            <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
            <Style Selector="^:pressed /template/ Panel#RootPanel">
                <Setter Property="RenderTransform" Value="scale(0.95, 0.95)" />
            </Style>
            <Style Selector="^ /template/ Border#HoverBackground">
                <Setter Property="Background" Value="{DynamicResource GhostColor}" />
            </Style>
            <Style Selector="^ /template/ Border#BorderContainer:pointerover">
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style Selector="^.NoPressedAnimation">
                <Style Selector="^:pressed /template/ Panel#RootPanel">
                    <Setter Property="RenderTransform" Value="scale(1, 1)" />
                </Style>
            </Style>
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type Menu}" TargetType="Menu">
        <Setter Property="FontWeight" Value="DemiBold" />
        <Setter Property="Background" Value="{DynamicResource CardBackgroundColor}" />
        <Setter Property="ItemContainerTheme" Value="{StaticResource TopLevelMenuItem}" />
        <Setter Property="Template">
            <ControlTemplate>
                <LayoutTransformControl Name="LayoutTransform" RenderTransformOrigin="50%, 0%">
                    <Border
                        Height="{TemplateBinding Height}"
                        Padding="{TemplateBinding Padding}"
                        BorderBrush="{DynamicResource BorderColor}"
                        BorderThickness="0"
                        ClipToBounds="True"
                        CornerRadius="{TemplateBinding CornerRadius}">
                        <ItemsPresenter
                            Name="ItemsPresenter"
                            Grid.IsSharedSizeScope="True"
                            ItemsPanel="{TemplateBinding ItemsPanel}"
                            KeyboardNavigation.TabNavigation="Continue" />
                    </Border>
                </LayoutTransformControl>
            </ControlTemplate>
        </Setter>
        <Style Selector="^[IsEnabled=True] /template/ LayoutTransformControl#LayoutTransform">
            <Style.Animations>
                <Animation
                    Easing="SineEaseInOut"
                    FillMode="Forward"
                    Duration="0:0:0.15">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleY" Value="0.90" />
                        <Setter Property="ScaleTransform.ScaleX" Value="0.90" />
                        <Setter Property="Opacity" Value="0" />
                        <Setter Property="IsVisible" Value="True" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        <Setter Property="ScaleTransform.ScaleX" Value="1" />
                        <Setter Property="Opacity" Value="1" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^[IsEnabled=False] /template/ LayoutTransformControl#LayoutTransform">
            <Style.Animations>
                <Animation
                    Easing="SineEaseInOut"
                    FillMode="Forward"
                    Duration="0:0:0.15">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleY" Value="1" />
                        <Setter Property="ScaleTransform.ScaleX" Value="1" />
                        <Setter Property="Opacity" Value="1" />
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleY" Value="0.9" />
                        <Setter Property="ScaleTransform.ScaleX" Value="0.9" />
                        <Setter Property="Opacity" Value="0" />
                        <Setter Property="IsVisible" Value="False" />
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^.Single">
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </ControlTheme>
</ResourceDictionary>