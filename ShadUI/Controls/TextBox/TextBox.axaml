<ResourceDictionary
    xmlns="https://github.com/avaloniaui"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:shadui="clr-namespace:ShadUI"
    xmlns:system="clr-namespace:System;assembly=netstandard">
    <ResourceDictionary.MergedDictionaries>
        <ResourceInclude Source="avares://ShadUI/Controls/Common.axaml" />
    </ResourceDictionary.MergedDictionaries>
    <Design.PreviewWith>
        <Border Padding="20">
            <StackPanel Width="250 " Spacing="16">
                <TextBox
                    Classes="Clearable"
                    UseFloatingWatermark="True"
                    Watermark="First Name" />
                <TextBox
                    Classes="Clearable"
                    UseFloatingWatermark="True"
                    Watermark="Last Name" />
                <TextBox
                    Classes="Clearable"
                    Text="john"
                    Watermark="Username" />
                <TextBox
                    shadui:ControlAssist.Label="Search"
                    Classes="Clearable"
                    Text="12321"
                    Watermark="Search here...">
                    <TextBox.InnerRightContent>
                        <PathIcon
                            Width="16"
                            Height="32"
                            Data="{x:Static shadui:Icons.Search}"
                            Opacity="0.75" />
                    </TextBox.InnerRightContent>
                </TextBox>
                <TextBox
                    shadui:ControlAssist.Label="Password"
                    Classes="ClearablePassword"
                    PasswordChar="•"
                    Text="12321"
                    Watermark="Enter password" />
                <TextBox
                    shadui:ControlAssist.Height="250"
                    shadui:ControlAssist.Hint="This is hint"
                    shadui:ControlAssist.Label="Description"
                    AcceptsReturn="True"
                    Watermark="Description" />
                <TextBox shadui:ControlAssist.Label="Error">
                    <DataValidationErrors.Error>
                        <system:Exception />
                    </DataValidationErrors.Error>
                </TextBox>
            </StackPanel>
        </Border>
    </Design.PreviewWith>
    <StreamGeometry x:Key="PasswordBoxRevealButtonData">M11,16c-1.52,0-3.03-.3-4.48-.89C3.65,13.93,1.32,11.6.14,8.73c0-.01,0-.02-.01-.03-.17-.45-.17-.94,0-1.39C2.61,1.28,9.49-1.58,15.48.89c2.87,1.18,5.2,3.51,6.38,6.38.18.48.18.98.01,1.42-1.21,2.94-3.47,5.2-6.36,6.4-1.46.6-2.98.91-4.51.91ZM2,8c.99,2.37,2.91,4.28,5.28,5.26,2.41.99,5.06.99,7.46-.01,2.4-1,4.28-2.88,5.27-5.29-.98-2.32-2.91-4.25-5.3-5.23C9.76.69,4.06,3.05,2,8ZM11,12c-2.21,0-4-1.79-4-4s1.79-4,4-4,4,1.79,4,4-1.79,4-4,4ZM11,6c-1.1,0-2,.9-2,2s.9,2,2,2,2-.9,2-2-.9-2-2-2Z</StreamGeometry>
    <StreamGeometry x:Key="PasswordBoxHideButtonData">M19.5,14.84c-.21,0-.43-.07-.61-.21-.44-.34-.52-.97-.18-1.4.54-.69.98-1.45,1.31-2.26-1.66-3.96-5.83-6.41-10.16-5.9-.55.06-1.05-.33-1.11-.88-.06-.55.33-1.05.88-1.11,5.21-.61,10.25,2.33,12.25,7.19.18.48.18.98.01,1.42-.42,1.01-.95,1.92-1.59,2.76-.2.25-.49.39-.79.39ZM21.71,21.71c-.2.19-.45.29-.71.29s-.51-.1-.71-.29l-3.98-3.98c-1.66.85-3.46,1.27-5.29,1.27-.98,0-1.96-.12-2.93-.37-3.04-.78-5.6-2.69-7.2-5.39-.29-.49-.54-1-.75-1.51-.18-.48-.18-.98-.02-1.43.82-1.97,2.15-3.68,3.83-4.93L.29,1.71C-.1,1.32-.1.68.29.29.68-.1,1.32-.1,1.71.29l4.49,4.5,15.51,15.5c.39.39.39,1.03,0,1.42ZM9.56,12.39c.52.53,1.27.72,1.95.54l-2.44-2.44c-.18.65-.01,1.38.49,1.9ZM14.8,16.22l-1.77-1.77c-.63.37-1.33.55-2.03.55-1.05,0-2.09-.41-2.88-1.22-1.28-1.33-1.47-3.29-.57-4.81l-2.18-2.18c-1.49,1.06-2.68,2.55-3.38,4.24.17.36.38.79.62,1.19,1.33,2.24,3.45,3.83,5.97,4.48,2.1.53,4.27.36,6.22-.48Z</StreamGeometry>

    <MenuFlyout x:Key="SimpleTextBoxContextFlyout" Placement="Bottom">
        <MenuItem
            Command="{CompiledBinding $parent[TextBox].Cut}"
            Header="{DynamicResource StringTextFlyoutCutText}"
            InputGesture="{x:Static TextBox.CutGesture}"
            IsEnabled="{CompiledBinding $parent[TextBox].CanCut}" />
        <MenuItem
            Command="{CompiledBinding $parent[TextBox].Copy}"
            Header="{DynamicResource StringTextFlyoutCopyText}"
            InputGesture="{x:Static TextBox.CopyGesture}"
            IsEnabled="{CompiledBinding $parent[TextBox].CanCopy}" />
        <MenuItem
            Command="{CompiledBinding $parent[TextBox].Paste}"
            Header="{DynamicResource StringTextFlyoutPasteText}"
            InputGesture="{x:Static TextBox.PasteGesture}"
            IsEnabled="{CompiledBinding $parent[TextBox].CanPaste}" />
    </MenuFlyout>
    <ControlTheme x:Key="PasswordTogglerTheme" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Arrow" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        x:Name="ButtonLayoutBorder"
                        Padding="4"
                        Background="Transparent">
                        <Panel>
                            <Path
                                x:Name="RevealIcon"
                                Width="16"
                                Height="12"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{DynamicResource PasswordBoxRevealButtonData}"
                                Fill="{DynamicResource ThemeForegroundColor}"
                                Stretch="Uniform" />
                            <Path
                                x:Name="HideIcon"
                                Width="16"
                                Height="16"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Data="{DynamicResource PasswordBoxHideButtonData}"
                                Fill="{DynamicResource ThemeForegroundColor}"
                                Stretch="Uniform" />
                        </Panel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style Selector="^:unchecked /template/ Path#HideIcon">
            <Setter Property="IsVisible" Value="False" />
        </Style>
        <Style Selector="^:checked /template/ Path#RevealIcon">
            <Setter Property="IsVisible" Value="False" />
        </Style>
    </ControlTheme>

    <ControlTheme x:Key="{x:Type TextBox}" TargetType="TextBox">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="LineHeight" Value="20" />
        <Setter Property="Background" Value="{DynamicResource SelectionColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}" />
        <Setter Property="Padding" Value="12,4" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CornerRadius" Value="{DynamicResource LgCornerRadius}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource PrimaryColor}" />
        <Setter Property="SelectionForegroundBrush" Value="{DynamicResource PrimaryForegroundColor}" />
        <Setter Property="CaretBrush" Value="{DynamicResource ForegroundColor}" />
        <Setter Property="FocusAdorner" Value="{x:Null}" />
        <Setter Property="shadui:ControlAssist.ShowProgress" Value="False" />
        <Setter Property="shadui:ControlAssist.MinHeight" Value="36" />
        <Setter Property="Template">
            <ControlTemplate>
                <StackPanel Background="Transparent" Focusable="False">
                    <TextBlock
                        Name="PART_Label"
                        Margin="0,0,0,6"
                        Classes="Small"
                        Cursor="Arrow"
                        IsVisible="{TemplateBinding UseFloatingWatermark}"
                        Text="{TemplateBinding Watermark}" />
                    <DataValidationErrors Focusable="False">
                        <StackPanel>
                            <Border
                                Name="Border"
                                Height="{TemplateBinding shadui:ControlAssist.Height}"
                                MinHeight="{TemplateBinding shadui:ControlAssist.MinHeight}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}">
                                <Grid ColumnDefinitions="Auto * Auto">
                                    <ContentPresenter
                                        Grid.Column="0"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding InnerLeftContent}" />
                                    <ScrollViewer
                                        Name="PART_ScrollViewer"
                                        Grid.Column="1"
                                        AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}"
                                        BringIntoViewOnFocusChange="{TemplateBinding (ScrollViewer.BringIntoViewOnFocusChange)}"
                                        HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
                                        IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
                                        VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}">
                                        <Panel Name="TextContainer">
                                            <TextBlock
                                                Name="Watermark"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                Opacity="0.5"
                                                Text="{TemplateBinding Watermark}"
                                                TextAlignment="{TemplateBinding TextAlignment}"
                                                TextWrapping="{TemplateBinding TextWrapping}">
                                                <TextBlock.IsVisible>
                                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                        <CompiledBinding
                                                            Converter="{x:Static StringConverters.IsNullOrEmpty}"
                                                            ElementName="PART_TextPresenter"
                                                            Path="PreeditText" />
                                                        <CompiledBinding
                                                            Converter="{x:Static StringConverters.IsNullOrEmpty}"
                                                            Path="Text"
                                                            RelativeSource="{RelativeSource TemplatedParent}" />
                                                    </MultiBinding>
                                                </TextBlock.IsVisible>
                                            </TextBlock>
                                            <TextPresenter
                                                Name="PART_TextPresenter"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                CaretBlinkInterval="{TemplateBinding CaretBlinkInterval}"
                                                CaretBrush="{TemplateBinding CaretBrush}"
                                                CaretIndex="{TemplateBinding CaretIndex}"
                                                LetterSpacing="{TemplateBinding LetterSpacing}"
                                                LineHeight="{TemplateBinding LineHeight}"
                                                PasswordChar="{TemplateBinding PasswordChar}"
                                                RevealPassword="{TemplateBinding RevealPassword}"
                                                SelectionBrush="{TemplateBinding SelectionBrush}"
                                                SelectionEnd="{TemplateBinding SelectionEnd}"
                                                SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
                                                SelectionStart="{TemplateBinding SelectionStart}"
                                                Text="{TemplateBinding Text,
                                                                       Mode=TwoWay}"
                                                TextAlignment="{TemplateBinding TextAlignment}"
                                                TextWrapping="{TemplateBinding TextWrapping}" />
                                        </Panel>
                                        <ScrollViewer.Styles>
                                            <Style Selector="ScrollContentPresenter#ContentPresenter">
                                                <Setter Property="Cursor" Value="IBeam" />
                                            </Style>
                                        </ScrollViewer.Styles>
                                    </ScrollViewer>
                                    <ContentPresenter
                                        Name="InnerRightContent"
                                        Grid.Column="2"
                                        Margin="0,4,12,4"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding InnerRightContent}"
                                        IsVisible="{TemplateBinding shadui:ControlAssist.ShowProgress,
                                                                    Converter={x:Static BoolConverters.Not}}" />
                                    <ContentPresenter
                                        Name="ClearButton"
                                        Grid.Column="2"
                                        Margin="0,4,12,4"
                                        VerticalAlignment="Center"
                                        IsVisible="{TemplateBinding shadui:ControlAssist.ShowProgress,
                                                                    Converter={x:Static BoolConverters.Not}}" />
                                    <ContentPresenter
                                        Name="LoadingIndicator"
                                        Grid.Column="2"
                                        Width="20"
                                        Height="20"
                                        Margin="0,4,12,4"
                                        VerticalAlignment="Center"
                                        Content="{TemplateBinding shadui:ControlAssist.ShowProgress,
                                                                  Converter={x:Static shadui:BooleanConverters.ToLoading}}"
                                        IsVisible="{TemplateBinding shadui:ControlAssist.ShowProgress}" />
                                </Grid>
                            </Border>
                            <TextBlock
                                Name="Hint"
                                Margin="0,4,0,0"
                                Classes="Caption Muted"
                                Cursor="Arrow"
                                IsVisible="{TemplateBinding shadui:ControlAssist.Hint,
                                                            Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
                                Text="{TemplateBinding shadui:ControlAssist.Hint}" />
                        </StackPanel>
                    </DataValidationErrors>
                </StackPanel>
            </ControlTemplate>
        </Setter>

        <Style Selector="^:pointerover /template/ Border#Border">
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <BrushTransition Property="BorderBrush" Duration="0:0:0.20" />
                    </Transitions>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
        </Style>
        <Style Selector="^:focus /template/ Border#Border">
            <Setter Property="Transitions">
                <Setter.Value>
                    <Transitions>
                        <BrushTransition Property="BorderBrush" Duration="0:0:0.20" />
                    </Transitions>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColor}" />
        </Style>
        <Style Selector="^:error">
            <Style Selector="^/template/ Border#Border">
                <Setter Property="BorderBrush" Value="{DynamicResource ErrorColor}" />
            </Style>
            <Style Selector="^/template/ TextBlock#PART_Label">
                <Setter Property="Foreground" Value="{DynamicResource ErrorColor}" />
            </Style>
        </Style>

        <Style Selector="^ /template/ StackPanel">
            <Setter Property="Cursor" Value="IBeam" />
        </Style>
        <Style Selector="^:disabled /template/ Border#Border">
            <Setter Property="Opacity" Value="0.5" />
        </Style>

        <Style Selector="^.Clearable[AcceptsReturn=False][IsReadOnly=False]:focus:not(TextBox:empty)">
            <Style Selector="^ /template/ ContentPresenter#InnerRightContent">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ClearButton">
                <Setter Property="Content">
                    <Template>
                        <Button
                            ClipToBounds="True"
                            Command="{CompiledBinding $parent[TextBox].Clear}"
                            Focusable="False"
                            Theme="{StaticResource ClearButtonTheme}" />
                    </Template>
                </Setter>
            </Style>
        </Style>

        <Style Selector="^[AcceptsReturn=True]">
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Style Selector="^ /template/ Panel#TextContainer">
                <Setter Property="Margin" Value="0,4" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#InnerRightContent">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ClearButton">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#LoadingIndicator">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
        </Style>

        <Style Selector="^.PasswordReveal[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
            <Style Selector="^ /template/ ContentPresenter#InnerRightContent">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ClearButton">
                <Setter Property="Content">
                    <Template>
                        <Panel>
                            <Panel.Styles>
                                <Style Selector="ToggleButton[IsChecked=True]">
                                    <Setter Property="(ToolTip.Tip)" Value="Hide Password" />
                                </Style>
                                <Style Selector="ToggleButton[IsChecked=False]">
                                    <Setter Property="(ToolTip.Tip)" Value="Show Password" />
                                </Style>
                            </Panel.Styles>
                            <ToggleButton
                                Background="Transparent"
                                ClipToBounds="True"
                                Focusable="False"
                                IsChecked="{CompiledBinding $parent[TextBox].RevealPassword,
                                                            Mode=TwoWay}"
                                Theme="{StaticResource PasswordTogglerTheme}" />
                        </Panel>
                    </Template>
                </Setter>
            </Style>
        </Style>
        <Style Selector="^.ClearablePassword[AcceptsReturn=False][IsReadOnly=False]:not(TextBox:empty)">
            <Style Selector="^ /template/ ContentPresenter#InnerRightContent">
                <Setter Property="IsVisible" Value="False" />
                <Setter Property="IsHitTestVisible" Value="False" />
            </Style>
            <Style Selector="^ /template/ ContentPresenter#ClearButton">
                <Setter Property="Content">
                    <Template>
                        <StackPanel Orientation="Horizontal" Spacing="8">
                            <Button
                                ClipToBounds="True"
                                Command="{CompiledBinding $parent[TextBox].Clear}"
                                Focusable="False"
                                Theme="{StaticResource ClearButtonTheme}" />
                            <Panel>
                                <Panel.Styles>
                                    <Style Selector="ToggleButton[IsChecked=True]">
                                        <Setter Property="(ToolTip.Tip)" Value="Hide Password" />
                                    </Style>
                                    <Style Selector="ToggleButton[IsChecked=False]">
                                        <Setter Property="(ToolTip.Tip)" Value="Show Password" />
                                    </Style>
                                </Panel.Styles>
                                <ToggleButton
                                    Background="Transparent"
                                    ClipToBounds="True"
                                    Focusable="False"
                                    IsChecked="{CompiledBinding $parent[TextBox].RevealPassword,
                                                                Mode=TwoWay}"
                                    Theme="{StaticResource PasswordTogglerTheme}" />
                            </Panel>
                        </StackPanel>
                    </Template>
                </Setter>
            </Style>
        </Style>
    </ControlTheme>
</ResourceDictionary>